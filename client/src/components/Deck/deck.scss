@import "~@/assets/scss/variables";
@import "~@/components/Card/card";

$deck-height: 8 !default;

#deck {
	$height: map-get($card-height, "small") + $deck-height;

	align-items: center;
	display: flex;
	flex: 0 0 5%;
	flex-direction: column;
	margin-right: 1rem;
	padding: 0.5rem;
	position: relative;

	.count {
		bottom: 0;
		color: $black;
		font-size: 1.25rem;
		font-weight: $font-weight-bold;
		left: 50%;
		position: absolute;
		transform: translateX(-50%);
		z-index: 1;
	}

	.deck {
		@extend %playing-cards;

		height: 100%;
		width: auto;

		&.empty::before {
			content: "X";
			font-size: 8rem;
		}

		.cards-group {
			height: rem-calc($height);
			width: rem-calc(map-get($card-width, "small"));

			&:not(.disabled) {
				cursor: pointer;
			}

			.cards-enter-active {
				animation: grow 0.5s;
			}

			.cards-leave-active {
				animation: shrink 0.5s;
			}
		}
	}

	&[type="main"] {
		&.can-draw {
			.cards-group {
				border: 2px dashed get-color("zest");
				box-shadow: 0 0 15px 10px theme-color("success");
			}
		}

		.dropdown {
			margin-top: 1rem;

			.dropdown-menu {
				max-height: 200px;
				overflow: auto;
			}
		}
	}

	&[type="discard"] {
		&[type="action"] {
			.card {
				animation: 0.5s linear shrink;
			}
		}

		.deck {
			border: 2px dashed transparent;

			.card {
				$rotate: 0;

				@for $i from 1 through 20 {
					$rotate: $rotate + 5;

					&:nth-child(#{$i}) {
						transform: rotate(#{$rotate}deg);
					}
				}
			}
		}
	}

	@media (min-width: $screen-md-min) {
		$height: map-get($card-height, "medium") + $deck-height;

		&[type="discard"] {
			padding: 1rem;
		}

		.deck {
			.cards-group {
				height: rem-calc($height);
				width: rem-calc(map-get($card-width, "medium"));
			}
		}
	}
}
