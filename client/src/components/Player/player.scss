@import '~@/components/Card/card';

.sq-player {
	align-content: center;
	align-items: center;
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
	margin-bottom: 3.5rem;
	position: relative;
	text-align: center;

	&.current {
		flex: 1 0 100%;

		card {
			top: 0;

			&.selected {
				transform: translateY(-15%);

				.card {
					border: 2px solid get-color('zest');
					border-radius: 0.75rem;
					transform: scale(1.5);
				}
			}
		}
	}

	&.active {
		.sq-player-info {
			color: get-color('zest');
			font-weight: $font-weight-bold;
		}
	}

	.sq-player-thumbnail {
		margin-right: 1rem;
		position: relative;

		img {
			width: 7.5rem;
		}

		.sq-player-card-count {
			bottom: 0;
			color: get-color('alabaster');
			font-size: 2rem;
			line-height: 1;
			position: absolute;
			right: 0;
		}
	}

	.sq-player-quarrel {
		@extend %playing-cards;

		animation: 0.5s linear grow;
		left: 0;
		position: absolute;
		top: 0;

		.card {
			box-shadow: none;
			left: 0;

			&::after {
				box-shadow: 0 0 20px 20px get-color('saffron');
				content: '';
				height: 100%;
				left: 0;
				opacity: 0;
				position: absolute;
				transition: opacity 0.5s linear;
				width: 100%;
			}
		}

		&.flip {
			@include flip-card($type: 'quarrel');
		}

		&.winner {
			.card {
				&::after {
					opacity: 1;
				}
			}
		}

		&.v-leave,
		&.v-leave-active {
			card {
				animation: 0.75s ease-out disappear;
			}
		}
	}

	.sq-player-cards {
		flex: 1 1 100%;
		height: 100%;

		.cards-group {
			@extend %playing-cards;
			height: 100%;

			.btn-card {
				width: rem-calc($card-width-stack);

				&.mine {
					animation: 0.5s linear grow;
				}

				&.v-leave,
				&.v-leave-active {
					.card {
						animation: 0.75s ease-out fade-out;
					}
				}
			}
		}

		.empty {
			@extend %playing-cards;

			border: 2px dotted;
			flex: 1;
			font-size: 4rem;
			height: rem-calc(map-get($card-height, 'small'));
			padding: 3.5rem;

			&::after {
				content: 'NO CARDS';
				left: 25%;
				position: absolute;
				top: 25%;
			}
		}
	}

	@media (min-width: $screen-md-min) {
		&.current {
			card {
				&.selected {
					.card {
						transform: scale(1);
					}
				}
			}
		}

		.sq-player-cards {
			flex-basis: auto;

			.empty {
				height: rem-calc(map-get($card-height, 'medium'));
				padding: 5rem;
			}
		}
	}
}
